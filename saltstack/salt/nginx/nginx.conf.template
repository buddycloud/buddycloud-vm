events {
    worker_connections  1024;
}

http {
    # Don't display nginx version in headers
    server_tokens off;      

    # Improve log formatting
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/buddycloud/nginx-access.log;
    error_log  /var/log/buddycloud/nginx-error.log;

    # Decrease the amount of time a request can sit idle
    keepalive_timeout 20;

    # Speed up file transfers
    sendfile        on;

    # Don't send out partial friends in packets
    tcp_nopush      on;

    # Collate smaller packets into fewer larger ones
    tcp_nodelay     off;

    # Enable gzip compression
    gzip on;
    gzip_http_version  1.0;     # Works for http 1.1 and 1.0
    gzip_comp_level 5;          # Increase level of compression
    gzip_min_length 256;        # Don't compress small files, compressed versions can end up larger
    gzip_proxied any;           # Compress files for proxies as well
    gzip_vary on;               # Proxies cache both reglar and gzipped versions of file
    gzip_types                  # Gzip the following types of requests/files
        application/atom+xml
        application/javascript
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/svg+xml
        image/x-icon
        text/css
        text/plain
        text/x-component;

    server {
      server_name         {{ salt['pillar.get']('buddycloud:lookup:domain') }};
      listen              80;
      location /api/ {
        proxy_pass http://127.0.0.1:9123/;
      }
location /primus/ {
        proxy_pass http://127.0.0.1:9123/primus/;
      }
      location / {
        proxy_pass http://127.0.0.1:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }
    }
    include /etc/nginx/mime.types;
    types {
      text/html   html htm shtml;
      text/css    css;
      text/xml    xml;
      application/x-web-app-manifest+json   webapp;
    }
}
