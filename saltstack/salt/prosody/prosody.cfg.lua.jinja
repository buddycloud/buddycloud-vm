--#
--# WARNING:
--# This file is under CM control - all manual changes will be removed
--#

-- Prosody XMPP Server Configuration

admins = { "admin@{{ salt['pillar.get']('buddycloud:lookup:domain') }}" }

daemonize = true
use_libevent = true;

plugin_paths = { "/etc/prosody/modules" }
pidfile = "/var/run/prosody/prosody.pid"

modules_enabled = {
    "saslauth"; -- Authentication for clients and servers. Recommended if you want to log in.
    "tls"; -- Add support for secure TLS on c2s/s2s connections
    "dialback"; -- s2s dialback support
    "disco"; -- Service discovery
    "posix"; -- POSIX functionality, sends server to background, enables syslog, etc.
    "version"; -- Replies to server version requests
    "uptime"; -- Report how long server has been running
    "time"; -- Let others know the time here on this server
    "ping"; -- Replies to XMPP pings with pongs
    "register"; -- Allow users to register on this server using a client and change passwords
    "admin_adhoc"; -- Allows administration via an XMPP client that supports ad-hoc commands
    "watchregistrations"; -- Alert admins of registrations
}

modules_disabled = {
}


c2s_require_encryption = true
s2s_secure_auth = true
--s2s_secure_domains = { "jabber.org" }
s2s_insecure_domains = {
}


storage = "sql"
sql = {
        driver = "PostgreSQL"; -- May also be "MySQL" or "SQLite3" (case sensitive!)
        host = "127.0.0.1"; -- The address of the database server (delete this line for Postgre
        database = "prosody_server"; -- The database name to use. 
        username = "prosody_server"; -- The username to authenticate to the database
        password = "'{{ salt['pillar.get']('postgres:users:prosody_server:password') }}'"; -- The password to authenticate to the database
    }

log = {
    --debug = "/var/log/prosody/prosody.dbg";
    info = "/var/log/prosody/prosody.log";
    error = "/var/log/prosody/prosody.err";
    -- Syslog:
    { levels = { "error" }; to = "syslog";  };
}

VirtualHost "{{ salt['pillar.get']('buddycloud:lookup:domain') }}"
  authentication        = "internal_hashed"
  allow_registration    = true 
  anonymous_login       = false
  ssl                   = {         key = "/etc/apache2/certs/EXAMPLE.COM.key";
                            certificate = "/etc/apache2/certs/EXAMPLE.COM.pem" }

-- for non-logged in browsing of open channels.
VirtualHost "anon.{{ salt['pillar.get']('buddycloud:lookup:domain') }}"
  authentication        = "anonymous"
  allow_registration    = false
  anonymous_login       = true

-- Buddycloud Channel Server XMPP component configuration.
Component "buddycloud.{{ salt['pillar.get']('buddycloud:lookup:domain') }}"
  component_secret      = "{{ salt['pillar.get']('buddycloud:lookup:channels-xmpp-componet-password') }}"

-- Buddycloud Channel Server (optional topic channels).
Component "topics.{{ salt['pillar.get']('buddycloud:lookup:domain') }}"
  component_secret      = "{{ salt['pillar.get']('buddycloud:lookup:channels-xmpp-componet-password') }}"

-- Buddycloud Media Server XMPP component configuration.
Component "media.{{ salt['pillar.get']('buddycloud:lookup:domain') }}"
  component_secret      = "{{ salt['pillar.get']('buddycloud:lookup:media-xmpp-componet-password') }}"

-- Buddycloud Pusher Server XMPP component configuration.
Component "pusher.{{ salt['pillar.get']('buddycloud:lookup:domain') }}"
  component_secret      = "{{ salt['pillar.get']('buddycloud:lookup:pusher-xmpp-componet-password') }}"

